/* automatically generated by rust-bindgen */

use std::libc::{c_int,c_uint,c_schar,c_void};
pub struct TagLib_File {
    dummy: c_int,
}
pub struct TagLib_Tag {
    dummy: c_int,
}
pub struct TagLib_AudioProperties {
    dummy: c_int,
}
pub type TagLib_File_Type = c_uint;
pub static TagLib_File_MPEG: c_uint = 0;
pub static TagLib_File_OggVorbis: c_uint = 1;
pub static TagLib_File_FLAC: c_uint = 2;
pub static TagLib_File_MPC: c_uint = 3;
pub static TagLib_File_OggFlac: c_uint = 4;
pub static TagLib_File_WavPack: c_uint = 5;
pub static TagLib_File_Speex: c_uint = 6;
pub static TagLib_File_TrueAudio: c_uint = 7;
pub static TagLib_File_MP4: c_uint = 8;
pub static TagLib_File_ASF: c_uint = 9;
pub type TagLib_ID3v2_Encoding = c_uint;
pub static TagLib_ID3v2_Latin1: c_uint = 0;
pub static TagLib_ID3v2_UTF16: c_uint = 1;
pub static TagLib_ID3v2_UTF16BE: c_uint = 2;
pub static TagLib_ID3v2_UTF8: c_uint = 3;
#[link_args = "-ltag_c"]
extern "C" {
    pub fn taglib_set_strings_unicode(unicode: c_int);
    pub fn taglib_set_string_management_enabled(management: c_int);
    pub fn taglib_free(pointer: *mut c_void);
    pub fn taglib_file_new(filename: *c_schar) -> *TagLib_File;
    pub fn taglib_file_new_type(filename: *c_schar, _type: TagLib_File_Type) -> *TagLib_File;
    pub fn taglib_file_free(file: *TagLib_File);
    pub fn taglib_file_is_valid(file: *TagLib_File) -> c_int;
    pub fn taglib_file_tag(file: *TagLib_File) -> *TagLib_Tag;
    pub fn taglib_file_audioproperties(file: *TagLib_File) ->
     *TagLib_AudioProperties;
    pub fn taglib_file_save(file: *mut TagLib_File) -> c_int;
    pub fn taglib_tag_title(tag: *TagLib_Tag) -> *c_schar;
    pub fn taglib_tag_artist(tag: *TagLib_Tag) -> *c_schar;
    pub fn taglib_tag_album(tag: *TagLib_Tag) -> *c_schar;
    pub fn taglib_tag_comment(tag: *TagLib_Tag) -> *c_schar;
    pub fn taglib_tag_genre(tag: *TagLib_Tag) -> *c_schar;
    pub fn taglib_tag_year(tag: *TagLib_Tag) -> c_uint;
    pub fn taglib_tag_track(tag: *TagLib_Tag) -> c_uint;
    pub fn taglib_tag_set_title(tag: *TagLib_Tag, title: *c_schar);
    pub fn taglib_tag_set_artist(tag: *TagLib_Tag, artist: *c_schar);
    pub fn taglib_tag_set_album(tag: *TagLib_Tag, album: *c_schar);
    pub fn taglib_tag_set_comment(tag: *TagLib_Tag, comment: *c_schar);
    pub fn taglib_tag_set_genre(tag: *TagLib_Tag, genre: *c_schar);
    pub fn taglib_tag_set_year(tag: *TagLib_Tag, year: c_uint);
    pub fn taglib_tag_set_track(tag: *TagLib_Tag, track: c_uint);
    pub fn taglib_tag_free_strings();
    pub fn taglib_audioproperties_length(audioProperties: *TagLib_AudioProperties) -> c_int;
    pub fn taglib_audioproperties_bitrate(audioProperties: *TagLib_AudioProperties) -> c_int;
    pub fn taglib_audioproperties_samplerate(audioProperties: *TagLib_AudioProperties) -> c_int;
    pub fn taglib_audioproperties_channels(audioProperties: *TagLib_AudioProperties) -> c_int;
    pub fn taglib_id3v2_set_default_text_encoding(encoding: TagLib_ID3v2_Encoding);
}
